version: '3.7'

services:
  haproxy:
    image: haproxy:alpine
    container_name: haproxy
    restart: always
    depends_on:
      - dockergen
    ports:
      - "80:80"
    volumes:
      - haproxy_conf:/usr/local/etc/haproxy
    networks:
      - default
      - proxy

  dockergen:
    image: jwilder/docker-gen
    container_name: haproxy_generator
    command: -notify-sighup haproxy -watch /etc/docker-gen/templates/haproxy.tmpl /usr/local/etc/haproxy/haproxy.cfg
    restart: always
    volumes:
      - haproxy_conf:/usr/local/etc/haproxy
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./haproxy.tmpl:/etc/docker-gen/templates/haproxy.tmpl

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"    
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

volumes:
  haproxy_conf:

networks:
  proxy:

